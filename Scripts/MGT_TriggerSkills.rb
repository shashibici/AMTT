
#=========================================================================
#	技能注册表，所有玩家定义的技能都需要在这里注册才能生效
#=========================================================================
module	RPG
	#-----------------------------------------------------------------------
	#	这是一个范例技能：
	#		每当你行动阶段完成之后，你可吸收所有敌人5%的HP，然后对
	#		所有敌人造成5%的MP伤害。
	#
	#-----------------------------------------------------------------------
	class EG_Absorb_Hp_Atk_Mp < Skill_Base
		def initialize(id)
			super(id)
			# 这个名字是技能名字
			@name = "吸血伤魔"
			# 在icon图画中的图标位置。目前只支持从RPGMaker的数据库中指定，所以
			# 游戏代码中会修正这个值，现在这个值设为0
			@icon_index = 0
			# 这里显示对这个技能的描述
			@descrip = "当你的行动阶段完成之后，你可吸收所有敌人5%的HP，然后对所有敌人造成5%的MP伤害"
			# 备注。目前不支持备注，一律设为""
			@note = ""
			# 下面设置一些必要的属性，例如攻击增加，等等。不设置的默认为0
			@atk = 0
		end
		#--------------------------------------------------------------------
		#	接口回调函数： onTrigger(battler, targets, players, enemies, data)
		#	battler	:	当前正在行动的角色。uniq_id。
		#	targets	:	目标列表中的角色，是battler的目标。uniq_id数组。
		#	players	:	玩家列表。uniq_id数组。
		#	enemies	:	敌人列表。uniq_id数组。
		#	data	:	Battle_Sence 对象，能够获得一切。在Battle_Sence
		#				中通过self就能传进来
		#
		#--------------------------------------------------------------------
		def onTrigger(battler, targets, players, enemies, data)
			if MGT.Phase_Round_Action_End != $Battler_Phase
				return 
			end
			absorb_hp = 0
			for t in targets
				reduce = $game_enemies[t].hp * 0.05
				$game_enemies[t].hp($game_enemies[t].hp - reduce)
				absorb_hp += reduce
			end
			battler.hp(battler.hp + absorb_hp)
			for t in targets
				reduce = $game_enemies[t].mp * 0.05
				$game_enemies[t].mp($game_enemies[t].mp - reduce)
			end
		end
	end
	#=============================================================================
	#-----------------------------------------------------------------------
	#	玩家可以在这后面定义许许多多的技能类，每一个技能类代表了一个技能。
	#	技能类的名字不能重复。类的名字第一个字母必须是大写。
	#
	#
	#-----------------------------------------------------------------------
	#==============================================================================
	
	
	
	
end
