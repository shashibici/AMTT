module RPG	
	#==============================================================================
	# ■ 改变速度 - 同名称的状态不能叠加，不同名称可以并存
	#		-- 测试通过
	#------------------------------------------------------------------------------	
	#	例子。
	#	名字：Single_Speed_Change_State
	#	效果：按百分比或者数值减慢攻速, 不可叠加
	#	
	#==============================================================================
	class Single_Speed_Change_State < State_Base
		attr_accessor 		:speed_rate
		attr_accessor		:speed
		#--------------------------------------------------------------------------
		# ● 能否叠加
		#--------------------------------------------------------------------------
		def can_accumulate?
			return false
		end
		#--------------------------------------------------------------------------
		# ● 最大叠加数 - 两重
		#--------------------------------------------------------------------------
		def max_accumulate
			1
		end
		#--------------------------------------------------------------------------
		# ● 按百分比减速
		#--------------------------------------------------------------------------
		def atkspeed_rate
			if @speed_rate != nil
				return @speed_rate
			else
				return 0
			end
		end
		#--------------------------------------------------------------------------
		# ● 按数值减速
		#--------------------------------------------------------------------------
		def atkspeed
			if @speed != nil
				return @speed
			else
				return 0
			end
		end
	end
	#==============================================================================
	# ■ 按百分比改变最防御 - 对应技能"坚守"
	#		-- 通过测试
	#------------------------------------------------------------------------------		
	#	JianShou_State
	#	效果：按百分比或者数值减慢攻速, 不可叠加
	#	
	#==============================================================================
	class JianShou_State < State_Base
		attr_accessor 			:ratio
		#--------------------------------------------------------------------------
		# ● 能否叠加
		#--------------------------------------------------------------------------
		def can_accumulate?
			return false
		end
		#--------------------------------------------------------------------------
		# ● 最大叠加数 - 两重
		#--------------------------------------------------------------------------
		def max_accumulate
			1
		end
		#--------------------------------------------------------------------------
		# ● 按百分比
		#--------------------------------------------------------------------------
		def def_rate
			if nil == @ratio
				return (1.0 - @battler.hp.to_f / @battler.maxhp.to_f) * 100
			else
				ret = (1.0 - @battler.hp.to_f / @battler.maxhp.to_f) * @ratio
				return ret
			end
		end
	end
end